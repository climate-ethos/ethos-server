; CouchDB Configuration Settings

; Custom settings should be made in this file. They will override settings
; in default.ini, but unlike changes made to default.ini, this file won't be
; overwritten on server upgrade.

[couchdb]
; When this configuration setting is set to true, automatically create the system databases on startup.
; Must be set false for a clustered CouchDB installation.
single_node = true
; Unique identifier for this CouchDB server instance.
uuid = ebc1a84615af48a7fc93e600147e7e77

[couch_peruser]
; If set to true, couch_peruser ensures that a private per-user database exists for each
; document in _users. These databases are writable only by the corresponding user. Database
; names are in the following form: userdb-{UTF-8 hex encoded username}.
enable = true

[chttpd]
; Enable cross origin resource sharing (cors)
enable_cors = true
; Address and port to use
bind_address = 0.0.0.0
port = 5984
; Every user must be authenticated
require_valid_user = true

[cors]
; Configure cors requests from the application, make this more restrictive in prod
origins = *
methods = GET, PUT, POST, HEAD, DELETE
headers = accept, authorization, content-type, origin, referer
credentials = true

; To create an admin account uncomment the '[admins]' section below and add a
; line in the format 'username = password'. When you next start CouchDB, it
; will change the password to a hash (so that your passwords don't linger
; around in plain-text files). You can add more admin accounts with more
; 'username = password' lines. Don't forget to restart CouchDB after
; changing this.
[admins]
admin = -pbkdf2-d9219cb416e7a619127d71ba172fac92cd8cf31f,56a38c5a96bb8931ed1007cba8b0daf7,10

[chttpd_auth]
; The secret token is used for Proxy Authentication and for Cookie Authentication.
secret = dee4d9c5bc318fadf258cbb33e997eed
